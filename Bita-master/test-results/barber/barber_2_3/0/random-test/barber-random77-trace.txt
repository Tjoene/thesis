0: <LogicalActor(EventID(-1,-1),akka.actor.LocalActorRefProvider$SystemGuardian),LogicalMessage(CreateChild(Props(<function0>;akka.actor.default-dispatcher;NoRouter;Deploy(;Config(SimpleConfigObject({}));NoRouter;NoScopeGiven));log1-Logging$DefaultLogger),EventID(-1,1),Map(akka://default/deadLetters -> 1)),LogicalActor(EventID(-1,-1),EntryPoint),Map(akka://default/deadLetters -> 2),false,false>
1: <LogicalActor(EventID(0,1),akka.event.Logging$DefaultLogger),LogicalMessage(InitializeLogger(akka.event.EventStream@6f5d78cc),EventID(-1,1),Map(akka://default/deadLetters -> 4)),LogicalActor(EventID(-1,-1),EntryPoint),Map(akka://default/deadLetters -> 5),false,false>
2: <LogicalActor(EventID(-1,4),test.sample.Customer),LogicalMessage(Go,EventID(-1,1),Map(akka://default/deadLetters -> 12)),LogicalActor(EventID(-1,-1),EntryPoint),Map(akka://default/deadLetters -> 12, akka://default/user/$d -> 1),false,true>
3: <LogicalActor(EventID(-1,5),test.sample.Customer),LogicalMessage(Go,EventID(-1,1),Map(akka://default/deadLetters -> 13)),LogicalActor(EventID(-1,-1),EntryPoint),Map(akka://default/deadLetters -> 13, akka://default/user/$e -> 1),false,true>
4: <LogicalActor(EventID(-1,6),test.sample.Customer),LogicalMessage(Go,EventID(-1,1),Map(akka://default/deadLetters -> 14)),LogicalActor(EventID(-1,-1),EntryPoint),Map(akka://default/user/$f -> 1, akka://default/deadLetters -> 14),false,true>
5: <LogicalActor(EventID(-1,3),test.sample.WaitingRoom),LogicalMessage(Enter(Actor[akka://default/user/$f]),EventID(4,1),Map(akka://default/user/$f -> 2, akka://default/deadLetters -> 14)),LogicalActor(EventID(-1,6),test.sample.Customer),Map(akka://default/user/$f -> 2, akka://default/user/$c -> 1, akka://default/deadLetters -> 14),false,false>
6: <LogicalActor(EventID(-1,3),test.sample.WaitingRoom),LogicalMessage(Enter(Actor[akka://default/user/$e]),EventID(3,1),Map(akka://default/deadLetters -> 13, akka://default/user/$e -> 2)),LogicalActor(EventID(-1,5),test.sample.Customer),Map(akka://default/user/$f -> 2, akka://default/user/$c -> 3, akka://default/deadLetters -> 14, akka://default/user/$e -> 2),false,false>
7: <LogicalActor(EventID(-1,3),test.sample.WaitingRoom),LogicalMessage(Enter(Actor[akka://default/user/$d]),EventID(2,1),Map(akka://default/deadLetters -> 12, akka://default/user/$d -> 2)),LogicalActor(EventID(-1,4),test.sample.Customer),Map(akka://default/user/$f -> 2, akka://default/user/$c -> 5, akka://default/deadLetters -> 14, akka://default/user/$e -> 2, akka://default/user/$d -> 2),false,false>
8: <LogicalActor(EventID(-1,4),test.sample.Customer),LogicalMessage(Full,EventID(7,1),Map(akka://default/user/$f -> 2, akka://default/user/$c -> 6, akka://default/deadLetters -> 14, akka://default/user/$e -> 2, akka://default/user/$d -> 2)),LogicalActor(EventID(-1,3),test.sample.WaitingRoom),Map(akka://default/user/$f -> 2, akka://default/user/$c -> 6, akka://default/deadLetters -> 14, akka://default/user/$e -> 2, akka://default/user/$d -> 3),false,true>
9: <LogicalActor(EventID(-1,3),test.sample.WaitingRoom),LogicalMessage(Next,EventID(5,1),Map(akka://default/user/$f -> 2, akka://default/user/$c -> 2, akka://default/deadLetters -> 14)),LogicalActor(EventID(-1,3),test.sample.WaitingRoom),Map(akka://default/user/$f -> 2, akka://default/user/$c -> 7, akka://default/deadLetters -> 14, akka://default/user/$e -> 2, akka://default/user/$d -> 2),false,false>
10: <LogicalActor(EventID(-1,5),test.sample.Customer),LogicalMessage(Wait,EventID(6,1),Map(akka://default/user/$f -> 2, akka://default/user/$c -> 4, akka://default/deadLetters -> 14, akka://default/user/$e -> 2)),LogicalActor(EventID(-1,3),test.sample.WaitingRoom),Map(akka://default/user/$f -> 2, akka://default/user/$c -> 4, akka://default/deadLetters -> 14, akka://default/user/$e -> 3),false,true>
11: <LogicalActor(EventID(-1,2),test.sample.Barber),LogicalMessage(Enter(Actor[akka://default/user/$e]),EventID(9,1),Map(akka://default/user/$f -> 2, akka://default/user/$c -> 8, akka://default/deadLetters -> 14, akka://default/user/$e -> 2, akka://default/user/$d -> 2)),LogicalActor(EventID(-1,3),test.sample.WaitingRoom),Map(akka://default/user/$f -> 2, akka://default/user/$b -> 1, akka://default/user/$c -> 8, akka://default/deadLetters -> 14, akka://default/user/$e -> 2, akka://default/user/$d -> 2),false,false>
12: <LogicalActor(EventID(-1,1),test.sample.Monitor),LogicalMessage(NotServed,EventID(8,1),Map(akka://default/user/$f -> 2, akka://default/user/$c -> 6, akka://default/deadLetters -> 14, akka://default/user/$e -> 2, akka://default/user/$d -> 4)),LogicalActor(EventID(-1,4),test.sample.Customer),Map(akka://default/user/$f -> 2, akka://default/user/$c -> 6, akka://default/deadLetters -> 14, akka://default/user/$a -> 1, akka://default/user/$e -> 2, akka://default/user/$d -> 4),false,false>
13: <LogicalActor(EventID(-1,5),test.sample.Customer),LogicalMessage(Start,EventID(11,1),Map(akka://default/user/$f -> 2, akka://default/user/$b -> 2, akka://default/user/$c -> 8, akka://default/deadLetters -> 14, akka://default/user/$e -> 2, akka://default/user/$d -> 2)),LogicalActor(EventID(-1,2),test.sample.Barber),Map(akka://default/user/$f -> 2, akka://default/user/$b -> 2, akka://default/user/$c -> 8, akka://default/deadLetters -> 14, akka://default/user/$e -> 4, akka://default/user/$d -> 2),false,true>
14: <LogicalActor(EventID(-1,5),test.sample.Customer),LogicalMessage(Done,EventID(11,2),Map(akka://default/user/$f -> 2, akka://default/user/$b -> 3, akka://default/user/$c -> 8, akka://default/deadLetters -> 14, akka://default/user/$e -> 2, akka://default/user/$d -> 2)),LogicalActor(EventID(-1,2),test.sample.Barber),Map(akka://default/user/$f -> 2, akka://default/user/$b -> 3, akka://default/user/$c -> 8, akka://default/deadLetters -> 14, akka://default/user/$e -> 5, akka://default/user/$d -> 2),false,true>
15: <LogicalActor(EventID(-1,3),test.sample.WaitingRoom),LogicalMessage(Next,EventID(11,1),Map(akka://default/user/$f -> 2, akka://default/user/$b -> 4, akka://default/user/$c -> 8, akka://default/deadLetters -> 14, akka://default/user/$e -> 2, akka://default/user/$d -> 2)),LogicalActor(EventID(-1,2),test.sample.Barber),Map(akka://default/user/$f -> 2, akka://default/user/$b -> 4, akka://default/user/$c -> 9, akka://default/deadLetters -> 14, akka://default/user/$e -> 2, akka://default/user/$d -> 2),false,false>
16: <LogicalActor(EventID(-1,2),test.sample.Barber),LogicalMessage(Enter(Actor[akka://default/user/$f]),EventID(15,1),Map(akka://default/user/$f -> 2, akka://default/user/$b -> 4, akka://default/user/$c -> 10, akka://default/deadLetters -> 14, akka://default/user/$e -> 2, akka://default/user/$d -> 2)),LogicalActor(EventID(-1,3),test.sample.WaitingRoom),Map(akka://default/user/$f -> 2, akka://default/user/$b -> 5, akka://default/user/$c -> 10, akka://default/deadLetters -> 14, akka://default/user/$e -> 2, akka://default/user/$d -> 2),false,false>
17: <LogicalActor(EventID(-1,1),test.sample.Monitor),LogicalMessage(Served,EventID(14,1),Map(akka://default/user/$f -> 2, akka://default/user/$b -> 3, akka://default/user/$c -> 8, akka://default/deadLetters -> 14, akka://default/user/$e -> 6, akka://default/user/$d -> 2)),LogicalActor(EventID(-1,5),test.sample.Customer),Map(akka://default/user/$f -> 2, akka://default/user/$b -> 3, akka://default/user/$c -> 8, akka://default/deadLetters -> 14, akka://default/user/$a -> 2, akka://default/user/$e -> 6, akka://default/user/$d -> 4),false,false>
18: <LogicalActor(EventID(-1,6),test.sample.Customer),LogicalMessage(Start,EventID(16,1),Map(akka://default/user/$f -> 2, akka://default/user/$b -> 6, akka://default/user/$c -> 10, akka://default/deadLetters -> 14, akka://default/user/$e -> 2, akka://default/user/$d -> 2)),LogicalActor(EventID(-1,2),test.sample.Barber),Map(akka://default/user/$f -> 3, akka://default/user/$b -> 6, akka://default/user/$c -> 10, akka://default/deadLetters -> 14, akka://default/user/$e -> 2, akka://default/user/$d -> 2),false,true>
19: <LogicalActor(EventID(-1,3),test.sample.WaitingRoom),LogicalMessage(Next,EventID(16,1),Map(akka://default/user/$f -> 2, akka://default/user/$b -> 8, akka://default/user/$c -> 10, akka://default/deadLetters -> 14, akka://default/user/$e -> 2, akka://default/user/$d -> 2)),LogicalActor(EventID(-1,2),test.sample.Barber),Map(akka://default/user/$f -> 2, akka://default/user/$b -> 8, akka://default/user/$c -> 11, akka://default/deadLetters -> 14, akka://default/user/$e -> 2, akka://default/user/$d -> 2),false,false>
20: <LogicalActor(EventID(-1,6),test.sample.Customer),LogicalMessage(Done,EventID(16,2),Map(akka://default/user/$f -> 2, akka://default/user/$b -> 7, akka://default/user/$c -> 10, akka://default/deadLetters -> 14, akka://default/user/$e -> 2, akka://default/user/$d -> 2)),LogicalActor(EventID(-1,2),test.sample.Barber),Map(akka://default/user/$f -> 4, akka://default/user/$b -> 7, akka://default/user/$c -> 10, akka://default/deadLetters -> 14, akka://default/user/$e -> 2, akka://default/user/$d -> 2),false,true>
21: <LogicalActor(EventID(-1,1),test.sample.Monitor),LogicalMessage(Served,EventID(20,1),Map(akka://default/user/$f -> 5, akka://default/user/$b -> 7, akka://default/user/$c -> 10, akka://default/deadLetters -> 14, akka://default/user/$e -> 2, akka://default/user/$d -> 2)),LogicalActor(EventID(-1,6),test.sample.Customer),Map(akka://default/user/$f -> 5, akka://default/user/$b -> 7, akka://default/user/$c -> 10, akka://default/deadLetters -> 14, akka://default/user/$a -> 3, akka://default/user/$e -> 6, akka://default/user/$d -> 4),false,false>
