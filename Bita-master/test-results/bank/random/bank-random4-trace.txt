0: <LogicalActor(EventID(-1,-1),akka.actor.LocalActorRefProvider$SystemGuardian),LogicalMessage(CreateChild(Props(<function0>;akka.actor.default-dispatcher;NoRouter;Deploy(;Config(SimpleConfigObject({}));NoRouter;NoScopeGiven));log1-Logging$DefaultLogger),EventID(-1,1),Map(akka://default/deadLetters -> 1)),LogicalActor(EventID(-1,-1),EntryPoint),Map(akka://default/deadLetters -> 2),false,false>
1: <LogicalActor(EventID(0,1),akka.event.Logging$DefaultLogger),LogicalMessage(InitializeLogger(akka.event.EventStream@22b8299c),EventID(-1,1),Map(akka://default/deadLetters -> 4)),LogicalActor(EventID(-1,-1),EntryPoint),Map(akka://default/deadLetters -> 5),false,false>
2: <LogicalActor(EventID(-1,1),Bank),LogicalMessage(Start,EventID(-1,1),Map(akka://default/deadLetters -> 7)),LogicalActor(EventID(-1,-1),EntryPoint),Map(akka://default/deadLetters -> 7, akka://default/user/$a -> 1),false,false>
3: <LogicalActor(EventID(-1,2),Account),LogicalMessage(Transfer(Actor[akka://default/user/$c];500),EventID(2,1),Map(akka://default/deadLetters -> 7, akka://default/user/$a -> 2)),LogicalActor(EventID(-1,1),Bank),Map(akka://default/user/$b -> 1, akka://default/deadLetters -> 8, akka://default/user/$a -> 2),false,false>
4: <LogicalActor(EventID(-1,2),Account),LogicalMessage(Receive(75;Bank),EventID(2,2),Map(akka://default/deadLetters -> 7, akka://default/user/$a -> 3)),LogicalActor(EventID(-1,1),Bank),Map(akka://default/user/$b -> 3, akka://default/deadLetters -> 8, akka://default/user/$a -> 3),false,false>
5: <LogicalActor(EventID(-1,3),Account),LogicalMessage(Receive(500;Freddy),EventID(3,1),Map(akka://default/user/$b -> 2, akka://default/deadLetters -> 8, akka://default/user/$a -> 2)),LogicalActor(EventID(-1,2),Account),Map(akka://default/user/$b -> 2, akka://default/user/$c -> 1, akka://default/deadLetters -> 9, akka://default/user/$a -> 2),false,false>
6: <LogicalActor(EventID(-1,2),Account),LogicalMessage(Balance,EventID(2,3),Map(akka://default/deadLetters -> 7, akka://default/user/$a -> 4)),LogicalActor(EventID(-1,1),Bank),Map(akka://default/user/$b -> 4, akka://default/deadLetters -> 8, akka://default/user/$a -> 4),false,false>
7: <LogicalActor(EventID(-1,1),Bank),LogicalMessage(75,EventID(6,1),Map(akka://default/user/$b -> 5, akka://default/deadLetters -> 8, akka://default/user/$a -> 4)),LogicalActor(EventID(-1,2),Account),Map(akka://default/user/$b -> 5, akka://default/deadLetters -> 8, akka://default/user/$a -> 5),false,false>
8: <LogicalActor(EventID(-1,1),Bank),LogicalMessage(Balance,EventID(-1,2),Map(akka://default/deadLetters -> 10)),LogicalActor(EventID(-1,-1),EntryPoint),Map(akka://default/user/$b -> 5, akka://default/deadLetters -> 10, akka://default/user/$a -> 6),false,false>
9: <LogicalActor(EventID(-1,-1),EntryPoint),LogicalMessage(75,EventID(8,1),Map(akka://default/user/$b -> 5, akka://default/deadLetters -> 10, akka://default/user/$a -> 7)),LogicalActor(EventID(-1,1),Bank),Map(akka://default/user/$b -> 5, akka://default/deadLetters -> 11, akka://default/user/$a -> 7),true,false>
